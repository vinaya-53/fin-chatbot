{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinuu\\\\finance-bot\\\\src\\\\components\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './chatbot.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosConfig = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nfunction HomePage() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatWindowRef = useRef(null); // Create a ref for the chat window\n\n  const sampleQueries = [\"What's the current stock price of AAPL?\", \"Can you advise me on a home loan?\", \"Tell me about the market capitalization of GOOGL\"];\n  const handleSend = async (query = input) => {\n    if (query.trim() === '') return; // Ignore empty input\n\n    const userMessage = {\n      text: query,\n      sender: 'user'\n    };\n    try {\n      const response = await axios.post('https://finance-bot-lyart.vercel.app/chat', {\n        message: query\n      }, axiosConfig);\n      const botMessage = {\n        text: response.data.response,\n        sender: 'bot'\n      };\n\n      // Update state with both messages at once\n      setMessages(prevMessages => [...prevMessages, userMessage, botMessage]);\n      setInput('');\n    } catch (error) {\n      console.error('Error sending message to the bot:', error);\n      // Even if there is an error, add the user message to the state\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n    }\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n  const handleSampleQueryClick = query => {\n    handleSend(query);\n  };\n  useEffect(() => {\n    // Scroll to the bottom of the chat window when messages change\n    if (chatWindowRef.current) {\n      chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fi-chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sample-queries\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Try asking:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), sampleQueries.map((query, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSampleQueryClick(query),\n        className: \"sample-query\",\n        children: query\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      ref: chatWindowRef,\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message message-${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown,\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSend(),\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"udC4p+uW/qjMAWBsvfQyrf9b4XE=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","axiosConfig","headers","HomePage","_s","messages","setMessages","input","setInput","chatWindowRef","sampleQueries","handleSend","query","trim","userMessage","text","sender","response","post","message","botMessage","data","prevMessages","error","console","handleKeyDown","event","key","handleSampleQueryClick","current","scrollTop","scrollHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","ref","msg","type","value","onChange","e","target","onKeyDown","_c","$RefreshReg$"],"sources":["C:/Users/vinuu/finance-bot/src/components/home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './chatbot.css'; // Import the CSS file\r\n\r\nconst axiosConfig = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n};\r\n\r\nfunction HomePage() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const chatWindowRef = useRef(null); // Create a ref for the chat window\r\n\r\n    const sampleQueries = [\r\n        \"What's the current stock price of AAPL?\",\r\n        \"Can you advise me on a home loan?\",\r\n        \"Tell me about the market capitalization of GOOGL\"\r\n    ];\r\n\r\n    const handleSend = async (query = input) => {\r\n        if (query.trim() === '') return; // Ignore empty input\r\n\r\n        const userMessage = { text: query, sender: 'user' };\r\n\r\n        try {\r\n            const response = await axios.post('https://finance-bot-lyart.vercel.app/chat', {\r\n                message: query,\r\n            }, axiosConfig);\r\n            const botMessage = { text: response.data.response, sender: 'bot' };\r\n\r\n            // Update state with both messages at once\r\n            setMessages(prevMessages => [...prevMessages, userMessage, botMessage]);\r\n            setInput('');\r\n        } catch (error) {\r\n            console.error('Error sending message to the bot:', error);\r\n            // Even if there is an error, add the user message to the state\r\n            setMessages(prevMessages => [...prevMessages, userMessage]);\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleSend();\r\n        }\r\n    };\r\n\r\n    const handleSampleQueryClick = (query) => {\r\n        handleSend(query);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Scroll to the bottom of the chat window when messages change\r\n        if (chatWindowRef.current) {\r\n            chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\r\n        }\r\n    }, [messages]);\r\n\r\n    return (\r\n        <div className=\"chatbot-container\">\r\n            <h1>Fi-chatbot</h1>\r\n            <div className=\"sample-queries\">\r\n                <p>Try asking:</p>\r\n                {sampleQueries.map((query, index) => (\r\n                    <button key={index} onClick={() => handleSampleQueryClick(query)} className=\"sample-query\">\r\n                        {query}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-window\" ref={chatWindowRef}>\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className={`message message-${msg.sender}`}>\r\n                        <p>{msg.text}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    className=\"chat-input\"\r\n                />\r\n                <button onClick={() => handleSend()} className=\"send-button\">Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}